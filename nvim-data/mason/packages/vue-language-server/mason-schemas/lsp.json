{"properties":{"vue.complete.casing.props":{"description":"Preferred attr name case.","default":"autoKebab","enum":["autoKebab","autoCamel","kebab","camel"],"enumDescriptions":["Auto Detect from Content (Fallback to :kebab-case=\"...\" if detect failed)","Auto Detect from Content (Fallback to :camelCase=\"...\" if detect failed)",":kebab-case=\"...\"",":camelCase=\"...\""],"type":"string"},"vue.complete.normalizeComponentImportName":{"description":"Normalize import name for auto import. (\"myCompVue\" -> \"MyComp\")","default":true,"type":"boolean"},"vue.autoInsert.parentheses":{"description":"Auto-wrap `()` to As Expression in interpolations for fix issue #520.","default":true,"type":"boolean"},"vue.autoInsert.dotValue":{"description":"Auto-complete Ref value with `.value`.","default":false,"type":"boolean"},"vue.autoInsert.bracketSpacing":{"description":"Auto add space between double curly brackets: {{|}} -> {{ | }}","default":true,"type":"boolean"},"vue.complete.casing.status":{"description":"Show name casing in status bar.","default":true,"type":"boolean"},"vue.inlayHints.missingProps":{"description":"Show inlay hints for missing required props.","default":false,"type":"boolean"},"volar.format.initialIndent":{"properties":{"sass":{"default":false,"type":"boolean"},"json5":{"default":false,"type":"boolean"},"scss":{"default":false,"type":"boolean"},"typescript":{"default":false,"type":"boolean"},"json":{"default":false,"type":"boolean"},"html":{"default":true,"type":"boolean"},"jade":{"default":false,"type":"boolean"},"less":{"default":false,"type":"boolean"},"jsonc":{"default":false,"type":"boolean"},"typescriptreact":{"default":false,"type":"boolean"},"javascript":{"default":false,"type":"boolean"},"css":{"default":false,"type":"boolean"},"javascriptreact":{"default":false,"type":"boolean"}},"description":"Whether to have initial indent.","default":{"html":true},"type":"object"},"vue.inlayHints.inlineHandlerLeading":{"description":"Show inlay hints for event argument in inline handlers.","default":false,"type":"boolean"},"volar.takeOverMode.extension":{"description":"The extension that take over language support for *.ts.","default":"Vue.volar","type":"string"},"vue.inlayHints.optionsWrapper":{"description":"Show inlay hints for component options wrapper for type support.","default":false,"type":"boolean"},"vue-semantic-server.trace.server":{"scope":"window","default":"off","description":"Traces the communication between VS Code and the language server.","type":"string","enum":["off","messages","verbose"]},"vue-syntactic-server.trace.server":{"scope":"window","default":"off","description":"Traces the communication between VS Code and the language server.","type":"string","enum":["off","messages","verbose"]},"vue.server.configFilePath":{"description":"Path to volar.config.js.","default":".\/volar.config.js","type":"string"},"vue.server.maxFileSize":{"description":"Maximum file size for Vue Server to load. (default: 20MB)","default":20971520,"type":"number"},"vue.server.petiteVue.supportHtmlFile":{"default":false,"type":"boolean"},"vue.server.vitePress.supportMdFile":{"default":false,"type":"boolean"},"vue.server.json.customBlockSchemaUrls":{"type":"object"},"vue.server.diagnosticModel":{"description":"Diagnostic update model.","enumDescriptions":["Diagnostic push by language server.","Diagnostic pull by language client."],"type":"string","default":"push","enum":["push","pull"]},"vue.server.maxOldSpaceSize":{"description":"Set --max-old-space-size option on server process. If you have problem on frequently \"Request textDocument\/** failed.\" error, try setting higher memory(MB) on it.","default":null,"type":["number","null"]},"vue.server.reverseConfigFilePriority":{"description":"Reverse priority for tsconfig pickup.","default":false,"type":"boolean"},"vue.server.additionalExtensions":{"type":"array","description":"List any additional file extensions that should be processed as Vue files (requires restart).","default":[],"items":{"type":"string"}},"vue.server.fullCompletionList":{"description":"Enable this option if you want to get complete CompletionList in language client. (Disable for better performance)","default":false,"type":"boolean"},"vue.doctor.status":{"description":"Show known problems in status bar.","default":true,"type":"boolean"},"vue.splitEditors.icon":{"description":"Show split editor icon in title area of editor.","default":false,"type":"boolean"},"vue.splitEditors.layout.left":{"default":["script","scriptSetup","styles"],"type":"array"},"vue.splitEditors.layout.right":{"default":["template","customBlocks"],"type":"array"},"vue.updateImportsOnFileMove.enabled":{"description":"Enabled update imports on file move.","default":false,"type":"boolean"},"vue.codeActions.enabled":{"description":"Enabled code actions.","default":true,"type":"boolean"},"vue.codeActions.savingTimeLimit":{"description":"Time limit for code actions on save (ms).","default":1000,"type":"number"},"vue.codeLens.enabled":{"description":"Enabled code lens.","default":true,"type":"boolean"},"vue.complete.casing.tags":{"description":"Preferred tag name case.","default":"autoPascal","enum":["autoKebab","autoPascal","kebab","pascal"],"enumDescriptions":["Auto Detect from Content (Fallback to <kebab-case> if detect failed)","Auto Detect from Content  (Fallback to <PascalCase> if detect failed)","<kebab-case>","<PascalCase>"],"type":"string"},"typescript.tsdk":{"type":"string"}},"title":"Volar","type":"object"}